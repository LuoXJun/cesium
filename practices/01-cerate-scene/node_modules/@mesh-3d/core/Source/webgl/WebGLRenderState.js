import WebGLLights from "./WebGLLights.js";
import WebGLRenderList from "./WebGLRenderList.js";

/**
 * @constructor
 */
function WebGLRenderState() {

    const renderList = new WebGLRenderList();
    const renderables = [];
    const dynamicRenderables = [];
    const shadowsArray = []
    const lightsArray = [];
    const lights = new WebGLLights();

    function init() {
        renderList.init();
        renderables.length = 0;
        dynamicRenderables.length = 0;
        lightsArray.length = 0;
        shadowsArray.length = 0;
    }

    function pushLight(light) {

        lightsArray.push(light);

    }

    function pushShadow(shadowLight) {

        shadowsArray.push(shadowLight);

    }

    function pushRenderable(object) {
        renderables.push(object);
    }

    const scope = this;
    function setupLights(camera) {

        scope.lights.setup(lightsArray, shadowsArray, camera);

    }

    //for onBeforeRender
    function setCurrentScene(scene, camera) {
        renderList.setCurrentScene(scene, camera)
    }

    function getDrawCommands(commandList,frameState) {
        renderList.getDrawCommands(commandList,frameState)
    }

    this.renderList = renderList;
    this.renderables = renderables;
    this.dynamicRenderables = dynamicRenderables
    this.shadowsArray = shadowsArray;
    this.lightsArray = lightsArray;

    this.lights = lights;

    this.init = init;
    this.pushRenderable = pushRenderable;
    this.setupLights = setupLights;
    this.pushShadow = pushShadow;
    this.pushLight = pushLight;
    this.setCurrentScene = setCurrentScene;
    this.getDrawCommands = getDrawCommands;
}

export default WebGLRenderState;