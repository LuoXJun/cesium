/**
 * threejs constants=>cesium constants
 */
class ConstantMap {

    static init() {
        if (this.hasInit) return;
        this.hasInit = true;
   
        this._formatsMap = {
            [THREE.RGBFormat]: Cesium.PixelFormat.RGB,
            [THREE.RGBAFormat]: Cesium.PixelFormat.RGBA,
            [THREE.DepthFormat]: Cesium.PixelFormat.DEPTH_COMPONENT,
            [THREE.AlphaFormat]: Cesium.PixelFormat.ALPHA,
            [THREE.DepthStencilFormat]: Cesium.PixelFormat.DEPTH_STENCIL,
            [THREE.LuminanceFormat]: Cesium.PixelFormat.LUMINANCE,
            [THREE.LuminanceAlphaFormat]: Cesium.PixelFormat.LUMINANCE_ALPHA,
            [THREE.RGBA_S3TC_DXT1_Format]: Cesium.PixelFormat.RGBA_DXT1,
            [THREE.RGBA_S3TC_DXT3_Format]: Cesium.PixelFormat.RGBA_DXT3,
            [THREE.RGBA_S3TC_DXT5_Format]: Cesium.PixelFormat.RGBA_DXT5,
            [THREE.RGBA_PVRTC_2BPPV1_Format]: Cesium.PixelFormat.RGBA_PVRTC_2BPPV1,
            [THREE.RGBA_PVRTC_4BPPV1_Format]: Cesium.PixelFormat.RGBA_PVRTC_4BPPV1,
            [THREE.RGB_S3TC_DXT1_Format]: Cesium.PixelFormat.RGB_DXT1,
            [THREE.RGB_ETC1_Format]: Cesium.PixelFormat.RGB_ETC1,
            [THREE.RGB_PVRTC_2BPPV1_Format]: Cesium.PixelFormat.RGB_PVRTC_2BPPV1,
            [THREE.RGB_PVRTC_4BPPV1_Format]: Cesium.PixelFormat.RGB_PVRTC_4BPPV1
        }

        this._typesMap = {
            [THREE.FloatType]: Cesium.PixelDatatype.FLOAT,
            [THREE.UnsignedByteType]: Cesium.PixelDatatype.UNSIGNED_BYTE,
            [THREE.HalfFloatType]: Cesium.PixelDatatype.HALF_FLOAT,
            [THREE.UnsignedIntType]: Cesium.PixelDatatype.UNSIGNED_INT,
            [THREE.UnsignedInt248Type]: Cesium.PixelDatatype.UNSIGNED_INT_24_8,
            [THREE.UnsignedShortType]: Cesium.PixelDatatype.UNSIGNED_SHORT,
            [THREE.UnsignedShort4444Type]: Cesium.PixelDatatype.UNSIGNED_SHORT_4_4_4_4,
            [THREE.UnsignedShort5551Type]: Cesium.PixelDatatype.UNSIGNED_SHORT_5_5_5_1,
            [THREE.UnsignedShort565Type]: Cesium.PixelDatatype.UNSIGNED_SHORT_5_6_5
        }

        this._minFilterMap = {
            [THREE.LinearFilter]: Cesium.TextureMinificationFilter.LINEAR,
            [THREE.LinearMipmapLinearFilter]: Cesium.TextureMinificationFilter.LINEAR_MIPMAP_LINEAR,
            [THREE.NearestMipMapLinearFilter]: Cesium.TextureMinificationFilter.NEAREST_MIPMAP_LINEAR,
            [THREE.NearestFilter]: Cesium.TextureMinificationFilter.NEAREST,
            [THREE.LinearMipmapNearestFilter]: Cesium.TextureMinificationFilter.LINEAR_MIPMAP_NEAREST,
            [THREE.NearestMipmapNearestFilter]: Cesium.TextureMinificationFilter.NEAREST_MIPMAP_NEAREST
        };

        this._magFilterMap = {
            [THREE.NearestFilter]: Cesium.TextureMagnificationFilter.NEAREST,
            [THREE.LinearFilter]: Cesium.TextureMagnificationFilter.LINEAR
        }

        this._textureWrapMap = {
            [THREE.ClampToEdgeWrapping]: Cesium.TextureWrap.CLAMP_TO_EDGE,
            [THREE.MirroredRepeatWrapping]: Cesium.TextureWrap.MIRRORED_REPEAT,
            [THREE.RepeatWrapping]: Cesium.TextureWrap.REPEAT
        }
 
        this._depthFuncMap = {
            [THREE.NeverDepth]: Cesium.WebGLConstants.NEVER,
            [THREE.AlwaysDepth]: Cesium.WebGLConstants.ALWAYS,
            [THREE.LessDepth]: Cesium.WebGLConstants.LESS,
            [THREE.LessEqualDepth]: Cesium.WebGLConstants.LEQUAL,
            [THREE.EqualDepth]: Cesium.WebGLConstants.EQUAL,
            [THREE.GreaterEqualDepth]: Cesium.WebGLConstants.GEQUAL,
            [THREE.GreaterDepth]: Cesium.WebGLConstants.GREATER,
            [THREE.NotEqualDepth]: Cesium.WebGLConstants.NOTEQUAL
        };

        this._factorMap = {
            [THREE.ZeroFactor]: Cesium.WebGLConstants.ZERO,
            [THREE.OneFactor]: Cesium.WebGLConstants.ONE,
            [THREE.SrcColorFactor]: Cesium.WebGLConstants.SRC_COLOR,
            [THREE.SrcAlphaFactor]: Cesium.WebGLConstants.SRC_ALPHA,
            [THREE.SrcAlphaSaturateFactor]: Cesium.WebGLConstants.SRC_ALPHA_SATURATE,
            [THREE.DstColorFactor]: Cesium.WebGLConstants.DST_COLOR,
            [THREE.DstAlphaFactor]: Cesium.WebGLConstants.DST_ALPHA,
            [THREE.OneMinusSrcColorFactor]: Cesium.WebGLConstants.ONE_MINUS_SRC_COLOR,
            [THREE.OneMinusSrcAlphaFactor]: Cesium.WebGLConstants.ONE_MINUS_SRC_ALPHA,
            [THREE.OneMinusDstColorFactor]: Cesium.WebGLConstants.ONE_MINUS_DST_COLOR,
            [THREE.OneMinusDstAlphaFactor]: Cesium.WebGLConstants.ONE_MINUS_DST_ALPHA
        };

        this._equationMap = {
            [THREE.AddEquation]: Cesium.WebGLConstants.FUNC_ADD,
            [THREE.SubtractEquation]: Cesium.WebGLConstants.FUNC_SUBTRACT,
            [THREE.ReverseSubtractEquation]: Cesium.WebGLConstants.FUNC_REVERSE_SUBTRACT,
            [THREE.MinEquation]: Cesium.WebGLConstants.MIN,
            [THREE.MaxEquation]: Cesium.WebGLConstants.MAX
        };
    }

    static get formatsMap() {
        this.init();
        return this._formatsMap;
    }
    static get typesMap() {
        this.init();
        return this._typesMap;
    }
    static get magFilterMap() {
        this.init();
        return this._magFilterMap;
    }
    static get minFilterMap() {
        this.init();
        return this._minFilterMap;
    }
    static get textureWrapMap() {
        this.init();
        return this._textureWrapMap;
    }
    static get depthFuncMap() {
        this.init();
        return this._depthFuncMap;
    }
    static get factorMap() {
        this.init();
        return this._factorMap;
    }
    static get equationMap() {
        this.init();
        return this._equationMap;
    }
}

export default ConstantMap;