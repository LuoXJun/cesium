
import * as THREE from '@mesh-3d/three';
import Cesium from '@mesh-3d/cesium';
import MeshVisualizer from "../MeshVisualizer.js";
import WebGLRenderItem from "./WebGLRenderItem.js";

/**
 * 渲染队列，提供渲染项目（WebGLRenderItem）的分类存储、队列入队和出队以及遍历获取绘图命令（DrawCommand）的方法。
 */
export default class WebGLRenderList {

    /**
     * @type {WebGLRenderItem[]}
     * @private
     */
    readonly environment: WebGLRenderItem[]
    /**
     * @type {WebGLRenderItem[]}
     * @private
     */
    readonly opaque: WebGLRenderItem[]
    /**
     * @type {WebGLRenderItem[]}
     * @private
     */
    readonly transparent: WebGLRenderItem[]

    /**
     * 初始化，清空渲染队列
     * @private
     */
    init(): void

    /**
     * 将渲染项目加入队列，内部自动将项目分为环境（environment）、透明（transparent）、不透明（opaque）三个通道
     * @param {WebGLRenderItem}renderItem 
     * @private
     */
    push(renderItem: WebGLRenderItem)

    /**
     *  将渲染项目移出队列
     * @param renderItem 
     * @private
     */
    unshift(renderItem: WebGLRenderItem)

    /**
     * 
     * @param {(a:WebGLRenderItem,b:WebGLRenderItem)=>number}[customOpaqueSort] 自定义的不透明对象渲染顺序排序方法
     * @param {(a:WebGLRenderItem,b:WebGLRenderItem)=>number}[customTransparentSort] 自定义的透明对象渲染顺序排序方法
     * @private
     */
    sort(customOpaqueSort?: (a: WebGLRenderItem, b: WebGLRenderItem) => number, customTransparentSort?: (a: WebGLRenderItem, b: WebGLRenderItem) => number)

    /**
     * 获取渲染队列中的所有绘图命令
     * @param commandList 
     * @param frameState 
     * @private
     */
    getDrawCommands(commandList: Cesium.DrawCommand, frameState: Cesium.FrameState)

    /**
     * 设置临时渲染场景
     * @param currentScene 
     * @param currentCamera 
     * @private
     */
    setCurrentScene(currentScene: MeshVisualizer | THREE.Object3D, currentCamera: THREE.PerspectiveCamera | THREE.OrthographicCamera)

}
 