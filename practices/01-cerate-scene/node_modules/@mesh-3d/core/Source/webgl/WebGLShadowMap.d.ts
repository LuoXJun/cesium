 
import MeshVisualizer from '../MeshVisualizer.js'; 
import WebGLRenderer from './WebGLRenderer.js'

/**
 * three.js阴影渲染器
 */
export default class WebGLShadowMap {

	/**
	 * 
	 * @param {WebGLRenderer} _renderer 
	 * @param {*} _objects 
	 * @param {number} maxTextureSize 
	 */
	constructor(renderer: WebGLRenderer, _objects: any, maxTextureSize: number)
	/**
	 * @type {boolean}
	 * @default false
	 */
	enabled: boolean
	/**
	 * @type {boolean}
	 * @default true 
	 */
	autoUpdate: boolean
	/**
	 * @type {boolean}
	 * @default false 
	 */
	needsUpdate: boolean

	/**
	 * @type {number}
	 * @default 16000
	 */
	maxTextureSize: number

	/**
	 * @type {boolean} 
	 */
	mapNeedsUpdate: boolean
	/**
	 * @type {THREE.BasicShadowMap | THREE.PCFShadowMap | THREE.PCFSoftShadowMap | THREE.VSMShadowMap}
	 */
	type: THREE.BasicShadowMap | THREE.PCFShadowMap | THREE.PCFSoftShadowMap | THREE.VSMShadowMap

	
	/**
	 * @type {boolean}
	 * @private
	 */
	 initialized: boolean

	/**
	 * 
	 * @param {THREE.Light[]} lights 
	 * @param {MeshVisualizer|THREE.Object3D} scene 
	 * @param {Cesium.FrameState} frameState 
	 * @param {MeshVisualizer} visualizer 
	 * @private
	 */
	render(lights:THREE.Light[], scene:MeshVisualizer|THREE.Object3D, frameState:Cesium.FrameState, visualizer:MeshVisualizer)

}
 