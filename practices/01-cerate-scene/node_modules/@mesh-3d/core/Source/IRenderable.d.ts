import MeshVisualizer from "./MeshVisualizer.js";

/**
 * 定义动态可渲染对象接口。
 */
export default interface IRenderable {
    /**
     * @type {true}  
     */
    isIRenderable: true;
    /**
     * @type {MeshVisualizer}
     */
    visualizer: MeshVisualizer;
    /**
     * 对象被加入MeshVisualizer的3D对象集合(children)时调用
     * @param {MeshVisualizer} visualizer 
     */
    onRemoved(visualizer:MeshVisualizer):void
    /**
    * 对象被移出MeshVisualizer的3D对象集合(children)时调用
    * @param {MeshVisualizer} visualizer 
    */
    onAdded(visualizer:MeshVisualizer):void

    /**
     * 渲染前调用，将实际可渲染的3D对象加入渲染队列（renderList）
     * @param {Cesium.FrameState} frameState 
     * @param {(Object3D|THREE.Object3D)[]} renderList 
     */
    render(frameState:Cesium.FrameState, renderList:(THREE.Object3D|THREE.Object3D)[]) :void
}